---
import Layout from '@layouts/app.astro';

import { fetchCategories, addCategory } from '@/src/data';

const userId = Astro.locals.user?.id as string;

const categories = await fetchCategories(userId);

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const name = formData.get('new-category-name') as string;
  if (name) {
    await addCategory(name, userId);
  }

  console.log(name);
}
---

<Layout title="Categories">
  {categories.length === 0 && <p>No categories found</p>}

  {
    categories.length > 0 &&
      categories.map((category) => (
        <div class="flex">
          <div class="p-2 flex-1 w-full">{category.name}</div>
          <div class="p-2">
            <form
              action={'/app/categories/' + category.id + '/delete'}
              method="POST"
            >
              <button
                type="submit"
                class="bg-gray-500 text-white text-xs px-1 py-0.5 font-mono rounded-sm cursor-pointer"
                onclick={
                  "return confirm('Are you sure you want to delete this category?')"
                }
              >
                Delete
              </button>
            </form>
          </div>
        </div>
      ))
  }
  <button
    id="button-add"
    class="fixed bottom-6 right-6 w-14 h-14 bg-green-500 hover:bg-green-600 text-white rounded-full flex items-center justify-center shadow-lg transition-transform hover:-translate-y-1 cursor-pointer"
  >
    <span class="text-3xl -mt-1 font-bold">&plus;</span>
  </button>

  <dialog
    id="dialog-add"
    class="rounded-lg shadow-xl border-0 p-0 w-full max-w-md fixed top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2"
  >
    <div class="bg-gray-200 p-4 rounded-t-lg flex justify-between items-center">
      <h2 class="text-sm text-gray-700 font-semibold">Add New Category</h2>
      <button id="button-close-dialog" class="text-2xl text-gray-700"
        >&times;</button
      >
    </div>
    <div class="p-6">
      <form method="POST" action="/app/categories">
        <div class="mb-4">
          <label
            for="new-category-name"
            class="block text-xs font-medium text-gray-700 mb-1"
            >Category Name</label
          >
          <input
            type="text"
            id="new-category-name"
            name="new-category-name"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 text-sm"
          />
        </div>
        <div class="flex justify-end space-x-3 mt-6 text-xs">
          <button
            type="button"
            id="button-cancel-dialog"
            class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 cursor-pointer"
            >Cancel</button
          >
          <button
            type="submit"
            class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 cursor-pointer"
            >Create Category</button
          >
        </div>
      </form>
    </div>
  </dialog>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const addButton = document.getElementById(
        'button-add'
      ) as HTMLButtonElement;

      const dialog = document.getElementById('dialog-add') as HTMLDialogElement;

      const closeDialog = document.getElementById(
        'button-close-dialog'
      ) as HTMLButtonElement;
      const cancelButton = document.getElementById(
        'button-cancel-dialog'
      ) as HTMLButtonElement;

      addButton.addEventListener('click', () => {
        // Cast to HTMLDialogElement to fix TypeScript error about showModal()
        dialog.showModal();
      });

      closeDialog.addEventListener('click', () => {
        dialog.close();
      });

      cancelButton.addEventListener('click', () => {
        dialog.close();
      });

      // Close when clicking backdrop
      dialog.addEventListener('click', (e) => {
        if (e.target === dialog) dialog.close();
      });
    });
  </script>
</Layout>
